@component-name = "portal-workflow"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Workflow";

	var workflowAssetType = "Blogs Entry";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");

			BlogsEntry.tearDownCP();

			Workflow.tearDownPortalWorkflow();

			Workflow.tearDownSiteWorkflow();

			JSONUser.tearDownNonAdminUsers();

			Role.tearDownCP();
		}
	}

	@description = "LPS-135888 - Verify that the user with Account role type can Approve the task"
	@ignore = "Test Stub"
	@priority = "5"
	test AccountUserCanApproveTask {

		// TODO LRQA-69107 AccountUserCanApproveTask pending implementation

	}

	@description = "LPS-135888 - Verify that the user with Account role can view the order details through the My Workflow Tasks page"
	@ignore = "Test Stub"
	@priority = "3"
	test AccountUserCanViewOrderDetails {

		// TODO LRQA-69109 AccountUserCanViewOrderDetails pending implementation

	}

	@priority = "4"
	test AddCommentToTaskAssignedToMe {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.gotoAssetViaTableTitle(workflowAssetTitle = "Blogs Entry Title");

		WorkflowComment.add(workflowComment = "Workflow Comment");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.gotoAssetViaTableTitle(workflowAssetTitle = "Blogs Entry Title");

		WorkflowComment.view(workflowComment = "Workflow Comment");
	}

	@priority = "3"
	test AddCommentToTaskAssignedToMyRoles {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow.gotoAssetViaTableTitle(workflowAssetTitle = "Blogs Entry Title");

		WorkflowComment.add(workflowComment = "Workflow Comment");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		Workflow.gotoAssetViaTableTitle(workflowAssetTitle = "Blogs Entry Title");

		WorkflowComment.view(workflowComment = "Workflow Comment");
	}

	@priority = "3"
	test AddCommentToTaskCompleted {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.gotoCompletedFilter();

		Workflow.gotoAssetViaTableTitle(workflowAssetTitle = "Blogs Entry Title");

		WorkflowComment.add(workflowComment = "Workflow Comment");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.gotoCompletedFilter();

		Workflow.gotoAssetViaTableTitle(workflowAssetTitle = "Blogs Entry Title");

		WorkflowComment.view(workflowComment = "Workflow Comment");
	}

	@priority = "4"
	test ApproveResubmitTaskByActions {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.rejectTaskByActions(
			workflowAssetContent = "Blogs Entry Content",
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByActions(
			workflowAssetContent = "Blogs Entry Content",
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Update");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		BlogsEntry.viewEntryTable(entryTitle = "Blogs Entry Title");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");
	}

	@description = "Verify that when there are no completed tasks Assigned to My Roles, the page is displaying -There are no completed tasks.-"
	@ignore = "Test Stub"
	@priority = "2"
	test AssignedToMyRolesShowsMessageWhenNoCompletedTasks {

		// TODO LRQA-68831 AssignedToMyRolesShowsMessageWhenNoCompletedTasks pending implementation

	}

	@description = "Verify that when there are no pending tasks Assigned to My Roles, the page is displaying -There are no pending tasks assigned to your roles.-"
	@ignore = "Test Stub"
	@priority = "2"
	test AssignedToMyRolesShowsMessageWhenNoPendingTasks {

		// TODO LRQA-68832 AssignedToMyRolesShowsMessageWhenNoPendingTasks pending implementation

	}

	@description = "Verify that the user can assign a task to current user in the Assigned to My Roles tab"
	@ignore = "Test Stub"
	@priority = "5"
	test CanAssignTaskToCurrentUser {

		// TODO LRQA-68842 CanAssignTaskToCurrentUser pending implementation

	}

	@description = "Verify that the user can assign a task to another user in the Assigned to My Roles tab"
	@ignore = "Test Stub"
	@priority = "5"
	test CanAssignTaskToOtherUser {

		// TODO LRQA-68843 CanAssignTaskToOtherUser pending implementation

	}

	@description = "LPS-135888 - Verify that the task is assigned to the user with Account role type"
	@ignore = "Test Stub"
	@priority = "4"
	test CanAssignTaskToUserWithAccountRole {

		// TODO LRQA-69106 CanAssignTaskToUserWithAccountRole pending implementation

	}

	@description = "Verify that the user can view the Assigned to My Roles page in List View"
	@ignore = "Test Stub"
	@priority = "2"
	test CanChangeToListView {

		// TODO LRQA-68841 CanChangeToListView pending implementation

	}

	@description = "Verify that the Clear All option cleans the search results"
	@ignore = "Test Stub"
	@priority = "3"
	test CanClearAllSearchResults {

		// TODO LRQA-68856 CanClearAllSearchResults pending implementation

	}

	@description = "Verify that in Update Due Date modal, the user can expand the comment box"
	@ignore = "Test Stub"
	@priority = "2"
	test CanExpandCommentBox {

		// TODO LRQA-68860 CanExpandCommentBox pending implementation

	}

	@description = "Verify that the user can filter the results inside Assigned to Me by status"
	@ignore = "Test Stub"
	@priority = "3"
	test CanFilterAssignedtoMeTasksByAssetStatus {

		// TODO LRQA-68847 CanFilterAssignedtoMeTasksByAssetStatus pending implementation

	}

	@description = "Verify that the user can filter the results inside Assigned to My Roles by status"
	@ignore = "Test Stub"
	@priority = "3"
	test CanFilterAssignedToMyRolesTaskByAssetStatus {

		// TODO LRQA-68838 CanFilterAssignedToMyRolesTaskByAssetStatus pending implementation

	}

	@description = "Verify that the user can open the task details by the table"
	@ignore = "Test Stub"
	@priority = "4"
	test CanOpenTaskDetailsByTable {

		// TODO LRQA-68859 CanOpenTaskDetailsByTable pending implementation

	}

	@description = "Verify that the user can order the results inside Assigned to Me by Due Date"
	@ignore = "Test Stub"
	@priority = "3"
	test CanOrderAssignedtoMeTasksByDueDate {

		// TODO LRQA-68849 CanOrderAssignedtoMeTasksByDueDate pending implementation

	}

	@description = "Verify that the user can order the results inside Assigned to Me by Last Activity Date"
	@ignore = "Test Stub"
	@priority = "3"
	test CanOrderAssignedtoMeTasksByLastActivityDate {

		// TODO LRQA-68848 CanOrderAssignedtoMeTasksByLastActivityDate pending implementation

	}

	@description = "Verify that the user can order the results inside Assigned to My Roles by Due Date"
	@ignore = "Test Stub"
	@priority = "2"
	test CanOrderAssignedtoMyRolesTasksByDueDate {

		// TODO LRQA-68840 CanOrderAssignedtoMyRolesTasksByDueDate pending implementation

	}

	@description = "Verify that the user can order the results inside Assigned to My Roles by Last Activity Date"
	@ignore = "Test Stub"
	@priority = "3"
	test CanOrderAssignedtoMyRolesTasksByLastActivityDate {

		// TODO LRQA-68839 CanOrderAssignedtoMyRolesTasksByLastActivityDate pending implementation

	}

	@description = "Verify that the user can assign a task to another user in the Assigned to Me tab"
	@ignore = "Test Stub"
	@priority = "5"
	test CanReassignTask {

		// TODO LRQA-68850 CanReassignTask pending implementation

	}

	@description = "Verify that the user is able to Reverse Sort Direction by clicking the icon"
	@ignore = "Test Stub"
	@priority = "2"
	test CanReverseSortDirection {

		// TODO LRQA-68836 CanReverseSortDirection pending implementation

	}

	@description = "Verify that the user can search for results inside Assigned to My Roles by Asset Title"
	@ignore = "Test Stub"
	@priority = "5"
	test CanSearchForAssetTitleOnAssignedToMyRolesTab {

		// TODO LRQA-68835 CanSearchForAssetTitleOnAssignedToMyRolesTab pending implementation

	}

	@description = "Verify that the user can search for results inside Assigned to My Roles by Asset Type"
	@ignore = "Test Stub"
	@priority = "3"
	test CanSearchForAssetTypeOnAssignedToMyRolesTab {

		// TODO LRQA-68834 CanSearchForAssetTypeOnAssignedToMyRolesTab pending implementation

	}

	@description = "Verify that the user can search for Task on Assigned to My Roles page"
	@ignore = "Test Stub"
	@priority = "2"
	test CanSearchForTaskOnAssignedToMyRolesTab {

		// TODO LRQA-68833 CanSearchForTaskOnAssignedToMyRolesTab pending implementation

	}

	@description = "Verify that the user can search for results inside Assigned to Me by Task"
	@ignore = "Test Stub"
	@priority = "3"
	test CanSearchTasksAssignedToMe {

		// TODO LRQA-68845 CanSearchTasksAssignedToMe pending implementation

	}

	@description = "Verify that the user can search for results inside Assigned to Me by Asset Title"
	@ignore = "Test Stub"
	@priority = "3"
	test CanSearchTasksAssignedtoMeByAssetTitle {

		// TODO LRQA-68846 CanSearchTasksAssignedtoMeByAssetTitle pending implementation

	}

	@description = "Verify that the user can search for results inside Assigned to Me by Asset Type"
	@ignore = "Test Stub"
	@priority = "3"
	test CanSearchTasksAssignedtoMeByAssetType {

		// TODO LRQA-68879 CanSearchTasksAssignedtoMeByAssetType pending implementation

	}

	@description = "Verify that, in the Assigned to Me table, users can hover over the Last Activity Date and the Due Date row to see the exact time of the action"
	@ignore = "Test Stub"
	@priority = "3"
	test CanViewActivityTimeByHoveringAssignedToMeTable {

		// TODO LRQA-68857 CanViewActivityTimeByHoveringAssignedToMeTable pending implementation

	}

	@description = "Verify that, in the Assigned to My Roles table, users can hover over the Last Activity Date and the Due Date row to see the exact time of the action"
	@ignore = "Test Stub"
	@priority = "3"
	test CanViewActivityTimeByHoveringAssignedToMyRolesTable {

		// TODO LRQA-68858 CanViewActivityTimeByHoveringAssignedToMyRolesTable pending implementation

	}

	@description = "Verify that in Update Due Date, the due date is required"
	@ignore = "Test Stub"
	@priority = "3"
	test DueDateIsRequired {

		// TODO LRQA-68861 DueDateIsRequired pending implementation

	}

	@description = "Verify that in Update Due Date modal, the user can not insert a past date"
	@ignore = "Test Stub"
	@priority = "3"
	test DueDateMustBeInFuture {

		// TODO LRQA-68862 DueDateMustBeInFuture pending implementation

	}

	@description = "Verify that the pagination button indicates the selected page, even when there is only 1 page"
	@ignore = "Test Stub"
	@priority = "2"
	test PaginationButtonIndicatesSelectedPage {

		// TODO LRQA-68855 PaginationButtonIndicatesSelectedPage pending implementation

	}

	@description = "Verify that pagination follows in asc/desc sequence in the Assigned to Me tab"
	@ignore = "Test Stub"
	@priority = "2"
	test PaginationFollowsAscDescSequence {

		// TODO LRQA-68851 PaginationFollowsAscDescSequence pending implementation

	}

	@description = "Verify that the pagination component is displayed when the table has 5 items or more"
	@ignore = "Test Stub"
	@priority = "2"
	test PaginationIsDisplayedWhenTableHas5Items {

		// TODO LRQA-68852 PaginationIsDisplayedWhenTableHas5Items pending implementation

	}

	@priority = "4"
	test RejectTaskByDetails {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.rejectTaskByDetails(
			workflowAssetContent = "Blogs Entry Content",
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.viewRejectedTask(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		BlogsEntry.viewWithWorkflowCP(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");
	}

	@priority = "5"
	test ResubmitTaskByDetails {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.rejectTaskByActions(
			workflowAssetContent = "Blogs Entry Content",
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByDetails(
			workflowAssetContent = "Blogs Entry Content",
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Update");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		BlogsEntry.viewWithWorkflowCP(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");
	}

	@priority = "3"
	test ReviewerApproveResubmitTaskByActionsUser {
		property custom.properties = "jsonws.web.service.paths.excludes=";
		property portal.upstream = "quarantine";

		Permissions.setUpRegRoleLoginUserCP(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_GENERAL_PERMISSIONS_ACCESS_IN_SITE_ADMINISTRATION_CHECKBOX",
			permissionDefinitionValue = "Access in Site and Asset Library Administration",
			permissionNavigationKey = "SITE_ADMIN_CONTENT_BLOGS",
			permissionNavigationValue = "Blogs",
			roleTitle = "Regrole Name");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			permissionNavigationKey = "SITE_ADMIN_CONTENT_BLOGS",
			permissionNavigationValue = "Blogs",
			roleTitle = "Regrole Name");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.addAssignee(
			assigneeName = "usersn2",
			assigneeType = "Users",
			roleTitle = "Portal Content Reviewer");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");
		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");
		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.rejectTaskByActions(
			workflowAssetContent = "Blogs Entry Content",
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByActions(
			workflowAssetContent = "Blogs Entry Content",
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Update");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		var key_entryTitle = "Blogs Entry Title";

		Blogs.viewEntryPresent(entryTitle = "Blogs Entry Title");

		AssertTextEquals(
			locator1 = "Blogs#ICON_VIEW_ENTRY_STATUS",
			value1 = "Pending");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");
		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");
		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		BlogsEntry.viewEntryTable(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryAuthorCP(
			entryAuthorFullName = "userfn1 userln1",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		BlogsEntry.viewEntryTable(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryAuthorCP(
			entryAuthorFullName = "userfn1 userln1",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");
	}

	@description = "Verify that when there are no results for the search in Assigned to My Roles tab, the page displays the message -There are no tasks assigned to your roles with the specified search criteria-"
	@ignore = "Test Stub"
	@priority = "2"
	test ShowsMessageWhenSearchReturnsNoResults {

		// TODO LRQA-68830 ShowsMessageWhenSearchReturnsNoResults pending implementation

	}

	@description = "Verify that when the user updates the due date of a task, the time until the due date shows in the table"
	@ignore = "Test Stub"
	@priority = "4"
	test TableShowsTimeLeft {

		// TODO LRQA-68863 TableShowsTimeLeft pending implementation

	}

	@description = "LPS-135888 - Verify that when the user delete the order, the task is not displayed under My Workflow Tasks"
	@ignore = "Test Stub"
	@priority = "3"
	test TaskIsNotDisplayedAfterOrderIsDeleted {

		// TODO LRQA-69108 TaskIsNotDisplayedAfterOrderIsDeleted pending implementation

	}

	@priority = "5"
	test UpdateDueDateTaskByActions {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.updateDueDateTaskByActions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowDueDateTime = "12:45 PM",
			workflowTask = "Review");
	}

	@description = "Verify that when there are no results for the search in Assigned to Me, the page is displaying -There are no tasks assigned to you with the specified search criteria.-"
	@ignore = "Test Stub"
	@priority = "2"
	test ViewMessageNoTasksAssignedToYouWithSearchCriteria {

		// TODO LRQA-68844 ViewMessageNoTasksAssignedToYouWithSearchCriteria pending implementation

	}

}