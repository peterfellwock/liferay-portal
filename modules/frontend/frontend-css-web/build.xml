<?xml version="1.0"?>
<!DOCTYPE project>

<project>
	<import file="../../../tools/sdk/build-common-osgi-plugin.xml" />

	<property name="auto.deploy.dir" value="${liferay.home}/osgi/portal" />

	<property name="alloy-font-awesome.version" value="2.0" />
	<property name="alloy.version" value="3.0.1" />
	<property name="bourbon.version" value="3.2.3" />
	<property name="third.party.path" value="../../../portal-web/third-party" />

	<target name="build-bourbon">
		<property name="portal.common.dir" value="../../../portal-web/docroot/html/css/common" />

		<property name="bourbon.deploy" value="${portal.common.dir}/bourbon" />

		<property name="bourbon.file" value="bourbon-${bourbon.version}.zip" />

		<property name="bourbon.tmp.dir" value="tmp/BOURBON_ZIP" />

		<if>
			<not>
				<uptodate
					srcfile="${third.party.path}/${bourbon.file}"
					targetfile="${bourbon.deploy}"
				/>
			</not>
			<then>
				<delete dir="${bourbon.tmp.dir}" />
				<delete dir="${bourbon.deploy}" />

				<unzip src="${third.party.path}/${bourbon.file}" dest="${bourbon.tmp.dir}" />

				<property name="bourbon.lib.dir" value="${bourbon.tmp.dir}/bourbon-${bourbon.version}/app/assets/stylesheets" />

				<copy todir="${bourbon.deploy}" overwrite="true" preservelastmodified="true">
					<fileset dir="${bourbon.lib.dir}/" />
				</copy>

				<delete dir="${bourbon.tmp.dir}" />
			</then>
		</if>
	</target>

	<target name="build-alloy-bootstrap">
		<property name="alloy.bootstrap.version" value="3.2.0-2" />

		<property name="alloy.bootstrap.deploy" value="src/META-INF/resources/html/themes/_unstyled/css/aui" />

		<property name="alloy.bootstrap.file" value="bootstrap-sass-${alloy.bootstrap.version}.zip" />

		<property name="alloy.bootstrap.tmp.dir" value="tmp/ALLOY_BOOTSTRAP_ZIP" />

		<if>
			<not>
				<uptodate
					srcfile="${third.party.path}/${alloy.bootstrap.file}"
					targetfile="${alloy.bootstrap.deploy}"
				/>
			</not>
			<then>

				<!-- Prepare -->

				<delete dir="${alloy.bootstrap.tmp.dir}" />
				<delete dir="${alloy.bootstrap.deploy}" />

				<unzip src="${third.party.path}/${alloy.bootstrap.file}" dest="${alloy.bootstrap.tmp.dir}" />

				<!-- CSS -->

				<property name="alloy.bootstrap.lib.dir" value="${alloy.bootstrap.tmp.dir}/bootstrap-sass-${alloy.bootstrap.version}/assets/stylesheets" />

				<delete failonerror="false" includeemptydirs="true" quiet="true">
					<fileset
						dir="${alloy.bootstrap.lib.dir}"
						includes="_bootstrap-*.scss"
					/>
				</delete>

				<copy todir="${alloy.bootstrap.deploy}" overwrite="true" preservelastmodified="true">
					<fileset dir="${alloy.bootstrap.lib.dir}/" />
				</copy>

				<!-- Glyphicons font -->

				<property name="alloy.bootstrap.fonts.lib.dir" value="${alloy.bootstrap.tmp.dir}/bootstrap-sass-${alloy.bootstrap.version}/assets/fonts/bootstrap" />

				<copy todir="${alloy.bootstrap.deploy}/glyphicons/font" overwrite="true" preservelastmodified="true">
					<fileset dir="${alloy.bootstrap.fonts.lib.dir}/" />
				</copy>

				<!-- Clean up -->

				<delete dir="${alloy.bootstrap.tmp.dir}" />
			</then>
		</if>
	</target>

	<target name="build-alloy-font-awesome" depends="build-alloy-bootstrap">
		<path id="alloy-font-awesome.zip.path">
			<fileset dir="${third.party.path}">
				<include name="alloy-font-awesome-${alloy-font-awesome.version}*.zip" />
			</fileset>
		</path>

		<property name="alloy-font-awesome.zip.path" refid="alloy-font-awesome.zip.path" />

		<basename file="${alloy-font-awesome.zip.path}" property="alloy-font-awesome.file" />

		<if>
			<not>
				<uptodate
					srcfile="${third.party.path}/${alloy-font-awesome.file}"
					targetfile="${alloy.bootstrap.deploy}/alloy-font-awesome"
				/>
			</not>
			<then>
				<delete dir="${alloy.bootstrap.deploy}/alloy-font-awesome" />

				<unzip src="${third.party.path}/${alloy-font-awesome.file}" dest="${alloy.bootstrap.deploy}" />

				<delete dir="${alloy.bootstrap.deploy}/alloy-font-awesome/css" />
				<delete dir="${alloy.bootstrap.deploy}/alloy-font-awesome/less" />
			</then>
		</if>
	</target>

	<target name="build-alloy-themes">
		<path id="alloy.zip.path">
			<fileset dir="${third.party.path}">
				<include name="alloy-${alloy.version}*.zip" />
			</fileset>
		</path>

		<property name="alloy.zip.path" refid="alloy.zip.path" />

		<basename file="${alloy.zip.path}" property="alloy.file" />

		<property name="alloy.dir" value="../frontend-js-web/tmp/aui" />

		<if>
			<not>
				<uptodate
					srcfile="${third.party.path}/${alloy.file}"
					targetfile="${alloy.dir}"
				/>
			</not>
			<then>
				<ant antfile="build.xml" dir="../frontend-js-web" target="build-alloy" />
			</then>
		</if>

		<delete dir="src/META-INF/resources/html/themes/_unstyled/images/aui" />

		<for param="dir">
			<path>
				<dirset
					dir="${alloy.dir}"
					includes="aui-*"
				/>
			</path>
			<sequential>
				<basename property="dir.name" file="@{dir}" />
				<if>
					<available file="${alloy.dir}/${dir.name}/assets/skins/sam" />
					<then>
						<copy todir="src/META-INF/resources/html/themes/_unstyled/images/aui" preservelastmodified="true">
							<fileset dir="{alloy.dir}/${dir.name}/assets/skins/sam" includes="**/*.png,**/*.jpg,**/*.gif" />
						</copy>
					</then>
				</if>
			</sequential>
		</for>

		<copy todir="src/META-INF/resources/html/themes/_unstyled/images/aui" preservelastmodified="true">
			<fileset dir="${alloy.dir}/aui-skin-deprecated/images" />
		</copy>

		<copy
			file="${alloy.dir}/aui_deprecated.css"
			tofile="src/META-INF/resources/html/css/portal/aui_deprecated.css"
			overwrite="true"
		/>
	</target>

	<target name="build-themes" depends="build-alloy-bootstrap,build-alloy-themes,build-alloy-font-awesome,build-bourbon">
		<for param="module.name">
			<path>
				<dirset dir="src/META-INF/resources/html/themes" excludes="_styled,_unstyled" includes="*" />
			</path>
			<sequential>
				<if>
					<available file="@{module.name}/_diffs/images" />
					<then>
						<for param="file">
							<path>
								<fileset
									dir="@{module.name}/_diffs/images"
									includes="**/screenshot.png"
								/>
							</path>
							<sequential>
								<propertyregex input="@{file}" override="yes" property="thumbnail.file" regexp="screenshot\.png" replace="thumbnail\.png" />

								<if>
									<not>
										<uptodate targetfile="${thumbnail.file}" srcfile="@{file}" />
									</not>
									<then>
										<java
											classname="com.liferay.portal.tools.ThumbnailBuilder"
											classpathref="project.classpath"
										>
											<arg value="thumbnail.original.file=@{file}" />
											<arg value="thumbnail.thumbnail.file=${thumbnail.file}" />
											<arg value="thumbnail.height=120" />
											<arg value="thumbnail.width=160" />
											<arg value="thumbnail.overwrite=false" />
										</java>
									</then>
								</if>
							</sequential>
						</for>
					</then>
				</if>

				<copy todir="@{module.name}" overwrite="true" preservelastmodified="true">
					<fileset
						dir="src/META-INF/resources/html/themes/_unstyled"
						excludes="templates/init.ftl,templates/init.vm"
					/>
				</copy>

				<copy todir="@{module.name}" overwrite="true" preservelastmodified="true">
					<fileset
						dir="src/META-INF/resources/html/themes/_styled"
					/>
				</copy>

				<if>
					<available file="@{module.name}/_diffs" />
					<then>
						<copy todir="@{module.name}" overwrite="true" preservelastmodified="true">
							<fileset
								dir="@{module.name}/_diffs"
							/>
						</copy>
					</then>
				</if>
			</sequential>
		</for>

		<copy
			file="src/META-INF/resources/html/themes/_unstyled/images/favicon.ico"
			preservelastmodified="true"
			todir="src/META-INF/resources"
		/>
	</target>

	<target name="clean-css">
		<delete includeemptydirs="true">
			<fileset dir="src/META-INF/resources/html/css" includes="**/.sass-cache/**,**/.sass_cache_*.css,**/_sass_cache_*.css" />
			<fileset dir="src/META-INF/resources/html/themes" includes="**/.sass-cache/**,**/.sass_cache_*.css,**/_sass_cache_*.css" />
		</delete>
	</target>

	<target name="clean-themes">
		<for param="module.name">
			<path>
				<dirset dir="src/META-INF/resources/html/themes" excludes="_styled,_unstyled" includes="*" />
			</path>
			<sequential>
				<delete includeemptydirs="true" quiet="true" failonerror="false">
					<fileset
						dir="@{module.name}"
						excludes="**/_diffs/**"
					/>
				</delete>
			</sequential>
		</for>
	</target>

	<target name="clean" depends="clean-css,clean-themes">
		<delete dir="src/META-INF/resources/html/themes/_unstyled/images/aui/" />
		<delete dir="src/META-INF/resources/html/themes/classic/color_schemes" />

		<clean
			module.dir="${basedir}"
		/>
	</target>

	<target name="jar" depends="build-common.compile,build-themes">
		<jar-macro
			module.dir="${basedir}"
		/>
	</target>
</project>
