definition {

	macro assertSuccessfulConnection {
		AssertElementPresent(locator1 = "ACDXPSettings#ANALYTICS_CLOUD_CONNECTED_CONFIRMATION_MESSAGE");
	}

	macro connectDXPtoAnalyticsCloud {
		if (!(isSet(siteName))) {
			siteName = "Liferay DXP";
		}

		ACDXPSettings.goToInstanceSettingsAC();

		Click(locator1 = "ACDXPSettings#TOKEN_INPUT_FIELD");

		Paste(locator1 = "ACDXPSettings#TOKEN_INPUT_FIELD");

		Click(locator1 = "ACDXPSettings#CONNECT_DISCONNECT_BUTTON");

		ACDXPSettings.assertSuccessfulConnection();

		ACDXPSettings.navToSyncedSitesMenu();

		ACDXPSettings.createCombinedProperties(siteName = "${siteName}");

		var assignedPropertyName = ACDXPSettings.getAssignedPropertyName(siteName = "${siteName}");

		ACDXPSettings.navToSyncedContactDataMenu();

		ACDXPSettings.syncContactData();

		return "${assignedPropertyName}";
	}

	macro createCombinedProperties {
		var siteName = "${siteName}";

		LexiconEntry.gotoAdd();

		Click(locator1 = "ACDXPSettings#COMBINATED_PROPERTY_OPTION");

		if (isSet(siteName)) {
			ACDXPSettings.searchACItem(searchItem = "${siteName}");
		}

		Click(locator1 = "ACDXPSettings#AC_GENERIC_CHECKBOX");

		Click(locator1 = "ACDXPSettings#AC_GENERIC_ADD_OR_CONFIRMATION_BUTTON");

		Alert.viewSuccessMessage();
	}

	macro createMultipleProperties {
		Click(locator1 = "ACDXPSettings#AC_GENERIC_ADD_OR_CONFIRMATION_BUTTON");

		Click(locator1 = "ACDXPSettings#MULTIPLE_PROPERTY_OPTION");

		for (var propertyName : list "${propertyList}") {
			key_propertyName = "${propertyName}";

			Click(locator1 = "ACDXPSettings#PROPERTY_NAME_CHECKBOX");
		}

		Click(locator1 = "ACDXPSettings#AC_GENERIC_ADD_OR_CONFIRMATION_BUTTON");
	}

	macro disconnectDXPFromAnalyticsCloud {
		ACDXPSettings.goToInstanceSettingsAC();

		if (IsElementPresent(locator1 = "ACDXPSettings#AC_GENERIC_CANCEL_BUTTON")) {
			ClickNoError(locator1 = "ACDXPSettings#CONNECT_DISCONNECT_BUTTON");

			AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to disconnect your Analytics Cloud workspace from this DXP instance?");
		}
	}

	macro getAssignedPropertyName {
		if (IsElementNotPresent(locator1 = "//*[@data-qa-id='headerTitle'][normalize-space(text())='Analytics Cloud']")) {
			ACDXPSettings.goToInstanceSettingsAC();
		}

		ACDXPSettings.navToSyncedSitesMenu();

		LexiconEntry.gotoAdd();

		WaitForVisible(
			key_tableEntry = "${siteName}",
			locator1 = "LexiconTable#TABLE_ENTRY");

		var assignedPropertyName = selenium.getText("//tr[@data-qa-id='row'][contains(.,'${siteName}')]//td[contains(@class,'assigned-property-column')]");

		ACNavigation.clickCancelButton();

		return "${assignedPropertyName}";
	}

	macro goToInstanceSettingsAC {
		PortalSettings.openInstanceSettingsAdmin();

		Click(locator1 = "ACDXPSettings#ANALYTICS_CLOUD_DXP_OPTION");
	}

	macro navToAnalyticsCloudConnectionMenu {
		Click(locator1 = "ACDXPSettings#AC_CONNECTION_NAV_SIDEBAR");
	}

	macro navToSyncedContactDataMenu {
		Click(locator1 = "ACDXPSettings#SYNCED_CONTACT_DATA_NAV_SIDEBAR");
	}

	macro navToSyncedSitesMenu {
		Click(locator1 = "ACDXPSettings#SYNCED_SITES_NAV_SIDEBAR");
	}

	macro searchACItem {
		Click(locator1 = "ACDXPSettings#SYNCED_SITES_SEARCH_FIELD");

		Type(
			locator1 = "ACDXPSettings#SYNCED_SITES_SEARCH_FIELD",
			value1 = "${searchItem}");

		KeyPress(
			locator1 = "ACDXPSettings#SYNCED_SITES_SEARCH_FIELD",
			value1 = "\ENTER");
	}

	macro selectAvailableProperties {
		var key_AvailablePropertyName = "${availablePropertyName}";

		Click(locator1 = "ACDXPSettings#AVAILABLE_PROPERTY_NAME");

		Click(locator1 = "ACDXPSettings#AC_GENERIC_CHECKBOX");
	}

	macro syncContactData {
		Click(locator1 = "ACDXPSettings#SYNC_CONTACTS_OPTION");

		Check.checkToggleSwitch(locator1 = "ACDXPSettings#SYNC_ALL_CONTACTS_TOGGLE");

		Click(locator1 = "ACDXPSettings#AC_GENERIC_ADD_OR_CONFIRMATION_BUTTON");

		Click(locator1 = "ACDXPSettings#AC_GENERIC_ADD_OR_CONFIRMATION_BUTTON");

		Alert.viewSuccessMessage();
	}

	macro syncNewContactData {
		ACDXPSettings.goToInstanceSettingsAC();

		ACDXPSettings.navToSyncedContactDataMenu();

		ACDXPSettings.syncContactData();
	}

}