@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.enabled = "true";
	property minimum.slave.ram = "32";
	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8158 | Test Summary: Switch the property which was selected by default"
	@priority = "5"
	test CanSwitchPropertyWhichWasSelectedByDefault {
		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();

		ACUtils.launchAC();

		AssertTextNotEquals(
			locator1 = "ACSidebar#CURRENT_PROPERTY",
			value1 = "${propertyName}");

		ACProperties.switchProperty(propertyName = "${propertyName}");

		AssertTextEquals(
			locator1 = "ACSidebar#CURRENT_PROPERTY",
			value1 = "${propertyName}");
	}

}