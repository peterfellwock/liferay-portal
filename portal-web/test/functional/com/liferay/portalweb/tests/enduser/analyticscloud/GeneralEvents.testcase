@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.enabled = "true";
	property minimum.slave.ram = "32";
	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8710 | Test Summary: Check all events can be triggered when offline"
	@ignore = "true"
	@priority = "3"
	test CheckAllEventsCanBeTriggeredWhenOffline {

		// TODO LRAC-8710 CheckAllEventsCanBeTriggeredWhenOffline pending implementation

	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8152 | Test Summary: Check all applicable events trigger for unknown users (Page, Blog, Form, Web Content, Documents & Media, Social)"
	@ignore = "true"
	@priority = "5"
	test CheckGeneralEventsForUnknownUser {

		// TODO LRAC-8152 CheckGeneralEventsForUnknownUser pending implementation

	}

}